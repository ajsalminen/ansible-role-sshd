- name: Install openssh packages
  action: apt pkg={{item}} state=present
  with_items:
    - ssh
    - openssh-client
    - openssh-server
  notify:
    - restart sshd
  when: ansible_os_family == 'Debian'

- name: Ensure SFTP-folder for chrooted users exists.
  file:
    path: "{{sshd_sftp_chroot_dir}}"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: sshd_sftp_path == "internal-sftp"

- name: Ensure SFTP share folder exists.
  file:
    path: "{{sshd_sftp_chroot_dir}}/share"
    state: directory
    owner: root
    group: root
    mode: 01777
  when: sshd_sftp_path == "internal-sftp"

- name: Manage sshd_config.
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config
          owner=root group={{ sshd_group }} mode=0644 backup=yes
  notify:
    - restart sshd

- name: Make sure assets path is present.
  local_action: file path="{{sshd_assets_path}}" state=directory
  sudo: no

- name: Generate known_hosts if wanted.
  local_action: shell ansible all --list | xargs ssh-keyscan -H > {{sshd_assets_path}}known_hosts
  when: sshd_regenerate_known_hosts is defined
  sudo: no

- name: Generate additional known_hosts entries for non-inventory hosts.
  local_action: shell echo '{{item}}' | xargs ssh-keyscan -H >> {{sshd_assets_path}}known_hosts
  with_items: "{{ sshd_additional_known_hosts }}"
  when: sshd_regenerate_known_hosts is defined
  sudo: no

- name: Copy known_hosts in place.
  copy: src={{sshd_assets_path}}known_hosts dest=/etc/ssh/ssh_known_hosts mode=0644 owner=root group={{ sshd_group }}

- name: Ensure sshd is running
  action: service name={{ sshd_service_name }} state=running
